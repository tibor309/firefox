FROM ghcr.io/linuxserver/baseimage-kasmvnc:arm64v8-alpine320

# set version label
ARG BUILD_DATE
ARG VERSION
ARG FIREFOX_VERSION
LABEL build_version="Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="tibor309"
LABEL org.opencontainers.image.description="Web accessible Firefox browser."
LABEL org.opencontainers.image.source=https://github.com/tibor309/firefox
LABEL org.opencontainers.image.url=https://github.com/tibor309/firefox/packages
LABEL org.opencontainers.image.licenses=GPL-3.0

# title
ENV TITLE="Firefox ESR"

RUN \
  echo "**** add icon ****" && \
  curl -o \
    /kclient/public/icon.png \
    https://raw.githubusercontent.com/tibor309/icons/master/icons/firefox/firefox_logo_256x256.png && \
  curl -o \
    /kclient/public/favicon.ico \
    https://raw.githubusercontent.com/tibor309/icons/master/icons/firefox/firefox_icon_32x32.ico && \
  echo "**** install packages ****" && \
  if [ -z ${FIREFOX_VERSION+x} ]; then \
    FIREFOX_VERSION=$(curl -sL "http://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz" | tar -xz -C /tmp \
    && awk '/^P:firefox-esr$/,/V:/' /tmp/APKINDEX | sed -n 2p | sed 's/^V://'); \
  fi && \
  apk add --no-cache \
    firefox-esr==${FIREFOX_VERSION} && \
  echo "**** lang support ****" && \
  FF_VERSION=$(curl -sI https://download.mozilla.org/?product=firefox-esr-latest | awk -F '(releases/|/win32)' '/Location/ {print $2}') && \
  REL_URL="https://releases.mozilla.org/pub/firefox/releases/${FF_VERSION}esr/win64/xpi/" && \
  LANGS=$(curl -Ls ${REL_URL} | awk -F '(xpi">|</a>)' '/href.*xpi/ {print $2}' | tr '\n' ' ') && \
  EXT_DIR=/usr/lib/firefox-esr/distribution/extensions/ && \
  mkdir -p ${EXT_DIR} && \
  for LANG in ${LANGS}; do \
    LANGCODE=$(echo ${LANG} | sed 's/\.xpi//g'); \
    echo "Downloading ${LANG} Language pack"; \
    curl -o \
      ${EXT_DIR}langpack-${LANGCODE}@firefox.mozilla.org.xpi -Ls \
      ${REL_URL}${LANG};\
  done && \
  echo "**** default firefox settings ****" && \
  FIREFOX_SETTING="/usr/lib/firefox-esr/browser/defaults/preferences/firefox.js" && \
  echo 'pref("datareporting.policy.firstRunURL", "");' > ${FIREFOX_SETTING} && \
  echo 'pref("datareporting.policy.dataSubmissionEnabled", false);' >> ${FIREFOX_SETTING} && \
  echo 'pref("datareporting.healthreport.service.enabled", false);' >> ${FIREFOX_SETTING} && \
  echo 'pref("datareporting.healthreport.uploadEnabled", false);' >> ${FIREFOX_SETTING} && \
  echo 'pref("trailhead.firstrun.branches", "nofirstrun-empty");' >> ${FIREFOX_SETTING} && \
  echo 'pref("browser.aboutwelcome.enabled", false);' >> ${FIREFOX_SETTING} && \
  echo "**** cleanup ****" && \
  rm -rf \
    /tmp/*

# add local files
COPY /root /

# ports and volumes
EXPOSE 3000

VOLUME /config
